<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Gamepad Viewer – DualShock 4 (Black/White)</title>
  <style>
    :root {
      --bg: transparent;
      --body: #000000;
      --stroke: #1a1a1a;
      --pressed: #ffffff;
      --pad-purple: #7e3ff2; /* luz do touchpad */
      --dim: #111111;
      --ghost: rgba(255,255,255,0.06);
    }
    html, body {
      margin: 0; padding: 0; background: var(--bg); overflow: hidden;
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji";
    }
    .wrap { display: grid; place-items: center; width: 100vw; height: 100vh; }
    svg { width: min(100vw, 900px); height: auto; }
    .body { fill: var(--body); stroke: var(--stroke); stroke-width: 2; }
    .btn, .bumper, .trigger, .dpad, .meta, .touchkey { fill: #000; stroke: var(--stroke); stroke-width: 2; }
    .stick-bg { fill: #000; stroke: var(--stroke); stroke-width: 2; }
    .stick-dot { fill: var(--pressed); opacity: .0; transition: opacity .12s linear; }
    .label { fill: #777; font-size: 10px; letter-spacing: .06em; display: none; }

    .pressed { fill: var(--pressed) !important; }
    .active-dot { opacity: .9; }

    /* Touchpad área e luz */
    .touchpad { fill: #000; stroke: var(--stroke); stroke-width: 2; }
    .touchpad-light {
      fill: var(--pad-purple);
      filter: drop-shadow(0 0 12px var(--pad-purple)) drop-shadow(0 0 24px var(--pad-purple));
      opacity: .85;
    }

    /* util */
    .hidden { display: none; }
  </style>
</head>
<body>
  <div class="wrap">
    <!-- SVG estilizado do DualShock 4 (simplificado p/ overlay) -->
    <svg viewBox="0 0 900 420" role="img" aria-label="DualShock 4 overlay">
      <!-- Corpo principal -->
      <g id="shell">
        <path class="body" d="M150,160 C140,110 180,70 230,70 L325,70 c30,0 55,20 62,48 a40,40 0 0 0 76,0 c7-28 32-48 62-48 h95 c50,0 90,40 80,90 l-8,42 c-10,52-33,80-80,90 l-58,12 c-22,5-45-3-59-21 l-25-33 c-12-15-33-15-45,0 l-25,33 c-14,18-37,26-59,21 l-58-12 c-47-10-70-38-80-90z"/>
      </g>

      <!-- Touchpad -->
      <g id="touchpad-group" transform="translate(280,95)">
        <rect class="touchpad" x="0" y="0" rx="12" ry="12" width="340" height="120" />
        <!-- “luz” roxa do touchpad (faixa superior) -->
        <rect class="touchpad-light" x="110" y="-16" rx="8" ry="8" width="120" height="12" />
        <!-- clique do touchpad -->
        <rect id="btn-17" class="touchkey" x="0" y="0" rx="12" ry="12" width="340" height="120" style="fill-opacity:0;" />
      </g>

      <!-- D-Pad -->
      <g id="dpad" transform="translate(195,155)">
        <rect id="btn-12" class="dpad" x="40" y="-30" width="40" height="40" rx="6" ry="6" />
        <rect id="btn-13" class="dpad" x="40" y="30" width="40" height="40" rx="6" ry="6" />
        <rect id="btn-14" class="dpad" x="-10" y="20" width="40" height="40" rx="6" ry="6" />
        <rect id="btn-15" class="dpad" x="90" y="20" width="40" height="40" rx="6" ry="6" />
      </g>

      <!-- Botões de ação -->
      <g id="actions" transform="translate(635,155)">
        <circle id="btn-3" class="btn" cx="40" cy="-30" r="22" />
        <circle id="btn-1" class="btn" cx="90" cy="20" r="22" />
        <circle id="btn-0" class="btn" cx="-10" cy="20" r="22" />
        <circle id="btn-2" class="btn" cx="40" cy="70" r="22" />
      </g>

      <!-- Share / Options / PS -->
      <g id="menu" transform="translate(300,230)">
        <rect id="btn-8" class="meta" x="-20" y="-50" width="40" height="18" rx="6" ry="6" />
        <rect id="btn-9" class="meta" x="280" y="-50" width="40" height="18" rx="6" ry="6" />
        <circle id="btn-16" class="meta" cx="160" cy="-40" r="12" />
      </g>

      <!-- L1 / R1 -->
      <g id="bumpers" transform="translate(170,70)">
        <rect id="btn-4" class="bumper" x="0" y="0" width="150" height="26" rx="8" ry="8" />
        <rect id="btn-5" class="bumper" x="580" y="0" width="150" height="26" rx="8" ry="8" />
      </g>

      <!-- L2 / R2 -->
      <g id="triggers" transform="translate(170,100)">
        <rect id="btn-6" class="trigger" x="10" y="0" width="140" height="26" rx="10" ry="10" />
        <rect id="btn-7" class="trigger" x="580" y="0" width="140" height="26" rx="10" ry="10" />
      </g>

      <!-- Sticks -->
      <g id="sticks">
        <g transform="translate(315,280)">
          <circle class="stick-bg" cx="0" cy="0" r="40" />
          <circle id="stickL" class="stick-dot" cx="0" cy="0" r="6" />
          <circle id="btn-10" class="btn" cx="0" cy="0" r="40" style="fill-opacity:0;" />
        </g>
        <g transform="translate(585,280)">
          <circle class="stick-bg" cx="0" cy="0" r="40" />
          <circle id="stickR" class="stick-dot" cx="0" cy="0" r="6" />
          <circle id="btn-11" class="btn" cx="0" cy="0" r="40" style="fill-opacity:0;" />
        </g>
      </g>
    </svg>
  </div>

  <script>
    /**
     * Gamepad Viewer – DualShock 4 (DS4)
     * - Tudo preto; botões ficam brancos quando pressionados
     * - Touchpad sempre com luz roxa (faixa superior)
     * - Fundo transparente p/ overlay no OBS
     *
     * Parâmetros via URL:
     *   index  -> índice do gamepad (padrão 0)
     *   scale  -> escala em % (padrão 100)
     */

    const qs = new URLSearchParams(location.search);
    const padIndex = parseInt(qs.get('index') || '0', 10);
    const scalePct = parseFloat(qs.get('scale') || '100');

    const svg = document.querySelector('svg');
    if (!isNaN(scalePct) && scalePct !== 100) {
      svg.style.width = `calc(min(100vw, 900px) * ${scalePct/100})`;
    }

    const pressableIds = [
      0,1,2,3, // ação
      4,5,6,7, // L1,R1,L2,R2
      8,9,10,11, // share, options, L3, R3
      12,13,14,15, // dpad
      16,17 // PS, touchpad click
    ];

    const elements = new Map();
    pressableIds.forEach(i => {
      const el = document.getElementById(`btn-${i}`);
      if (el) elements.set(i, el);
    });
    const stickL = document.getElementById('stickL');
    const stickR = document.getElementById('stickR');

    let connectedOnce = false;

    window.addEventListener('gamepadconnected', (e) => {
      connectedOnce = true;
    });

    function poll() {
      const pads = navigator.getGamepads ? navigator.getGamepads() : [];
      const gp = pads && pads[padIndex];

      if (gp && gp.connected) {
        // Botões
        gp.buttons.forEach((b, i) => {
          const el = elements.get(i);
          if (!el) return;
          if (b.pressed) {
            el.classList.add('pressed');
          } else {
            el.classList.remove('pressed');
          }
        });

        // Sticks (0,1) e (2,3) – desloca o dot, não muda cor de fundo
        const lx = gp.axes[0] || 0; // -1 a 1
        const ly = gp.axes[1] || 0;
        const rx = gp.axes[2] || 0;
        const ry = gp.axes[3] || 0;
        const radius = 28; // limite dentro do stick-bg

        if (stickL) {
          stickL.setAttribute('cx', (lx * radius).toFixed(1));
          stickL.setAttribute('cy', (ly * radius).toFixed(1));
          const mag = Math.hypot(lx, ly);
          stickL.classList.toggle('active-dot', mag > 0.08);
        }
        if (stickR) {
          stickR.setAttribute('cx', (rx * radius).toFixed(1));
          stickR.setAttribute('cy', (ry * radius).toFixed(1));
          const mag = Math.hypot(rx, ry);
          stickR.classList.toggle('active-dot', mag > 0.08);
        }
      }

      requestAnimationFrame(poll);
    }

    // Para browsers que não disparam o evento, iniciamos assim mesmo
    setTimeout(() => { if (!connectedOnce) poll(); }, 100);
    requestAnimationFrame(poll);
  </script>
</body>
</html>
